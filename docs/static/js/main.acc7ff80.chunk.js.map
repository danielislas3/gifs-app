{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","console","log","name","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","gif","key","GifApp","categories","setcategories","i","ReactDOM","render","document","getElementById"],"mappings":"yLAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAiBhD,OACE,0BAAMC,SAXa,SAAAC,GACnBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAmBO,OACpCN,EAAc,KAGhBO,QAAQC,IAAIN,KAKV,4CACA,2BACEO,KAAK,MACLC,KAAK,OACLC,MAAOZ,EACPa,SArBoB,SAAAV,GACxBF,EAAcE,EAAEW,OAAOF,Y,uBCRdG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACfC,EADe,0FAC0EC,UAC7FH,GAFmB,sBAKFI,MAAMF,GALJ,cAKfG,EALe,gBAMEA,EAAKC,KAAKD,GANZ,uBAMbE,EANa,EAMbA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXjB,kBAcdM,GAdc,4CAAH,sDCEPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IACpC,OACE,yBAAKc,UAAU,QACb,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCFGO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAAAA,GAAa,IAAD,EACZjB,mBAAS,CACjCwB,KAAM,GACNa,SAAS,IAH2B,mBAC/BC,EAD+B,KACxBC,EADwB,KAetC,OATAC,qBAAU,WACRxB,EAAQC,GAAUwB,MAAK,SAAAjB,GACrBe,EAAS,CACPf,OACAa,SAAS,SAGZ,CAACpB,IAEGqB,EDbwBI,CAAazB,GAA/BQ,EAD0B,EAC/BD,KAAWa,EADoB,EACpBA,QAEnB,OACE,oCACE,4BAAKpB,GACJoB,GAAW,yCACZ,yBAAKJ,UAAU,+CACZR,EAAKC,KAAI,SAAAiB,GAAG,OACX,kBAAC,EAAD,iBAAiBA,EAAjB,CAAsBC,IAAKD,EAAIf,YER5BiB,EAAS,WAAO,IAAD,EACU7C,mBAAS,CAAC,aADpB,mBACnB8C,EADmB,KACPC,EADO,KAG1B,OACE,oCACE,sCACA,kBAAC,EAAD,CAAahD,cAAegD,IAC5B,6BAEA,4BACGD,EAAWpB,KAAI,SAACtB,EAAG4C,GAAJ,OACf,kBAAC,EAAD,CACA/B,SAAUb,EACVwC,IAAKxC,U,MCbd6C,IAASC,OACT,kBAAC,EAAD,MAEEC,SAASC,eAAe,U","file":"static/js/main.acc7ff80.chunk.js","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (inputValue.trim().length > 2) {\n      setCategories(cat => [inputValue,...cat]);\n      setInputValue(\"\");\n    }\n\n    console.log(e);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2>Add Category</h2>\n      <input\n        name=\"cat\"\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInputChange}\n      />\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n","export const getGifs = async category => {\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=vEaPTgb1Us1xqjEeRe5Tob3Nbw2FXaDQ&q=${encodeURI(\n    category\n  )}&limit=10`;\n\n  const resp = await fetch(url);\n  const { data } = await resp.json(resp);\n  const gifs = data.map(img => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    };\n  });\n  return gifs;\n};\n","import React from 'react'\n\nexport const GifGridItem = ({id,title,url}) => {\n  return (\n    <div className=\"card\">\n      <img src={url} alt={title}/>\n      <p>{title}</p>\n    </div>\n  )\n}\n","import React from \"react\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport { GifGridItem } from \"./GifGridItem\";\n\nexport const GifGrid = ({ category }) => {\n  const { data:gifs, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3>{category}</h3>\n      {loading && <p>Loading...</p>}\n      <div className=\"card-grid animate__animated animate__fadeIn\">\n        {gifs.map(gif => (\n          <GifGridItem {...gif} key={gif.id} />\n        ))}\n      </div>\n    </>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = category => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then(data => {\n      setState({\n        data,\n        loading: false,\n      });\n    });\n  }, [category]);\n\n  return state;\n};\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\n\nexport const GifApp = () => {\n  const [categories, setcategories] = useState([\"Deadpool\"]);\n\n  return (\n    <>\n      <h1 >GifApp</h1>\n      <AddCategory setCategories={setcategories} />\n      <hr />\n\n      <ol>\n        {categories.map((e, i) => (\n         <GifGrid \n         category={e}\n         key={e}\n         />\n         \n        ))}\n      </ol>\n    </>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GifApp } from \"./GifApp\";\nimport \"./index.css\";\n\nReactDOM.render(\n<GifApp />\n\n, document.getElementById(\"root\"));\n"],"sourceRoot":""}